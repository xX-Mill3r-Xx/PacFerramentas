<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        du4AAAAASUVORK5CYII=
</value>
  </data>
</root>